generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model usuario {
  ID_usuario Int       @id @default(autoincrement())
  nome       String
  email      String    @unique
  senha      String
  tipo       TipoUsuario
  matriculas matricula[]
  tentativas tentativa[]
  feedbacks  feedback[]
}

model curso {
  ID_curso   Int         @id @default(autoincrement())
  nome       String
  descricao  String
  matriculas matricula[]
  conteudos  conteudo[]
}

model matricula {
  ID_matricula   Int     @id @default(autoincrement())
  ID_usuario     Int
  ID_curso       Int
  data_matricula DateTime

  usuario usuario @relation(fields: [ID_usuario], references: [ID_usuario], onDelete: Cascade)
  curso   curso   @relation(fields: [ID_curso], references: [ID_curso], onDelete: Cascade)

  @@unique([ID_usuario, ID_curso])
}

model conteudo {
  ID_conteudo Int       @id @default(autoincrement())
  ID_curso    Int
  titulo      String
  descricao   String
  tipo        TipoConteudo

  curso      curso     @relation(fields: [ID_curso], references: [ID_curso], onDelete: Cascade)
  atividades atividade[]
  tentativas tentativa[]
  feedbacks  feedback[]
}

model atividade {
  ID_atividade Int       @id @default(autoincrement())
  ID_conteudo  Int
  titulo       String
  descricao    String
  data_criacao DateTime

  conteudo conteudo @relation(fields: [ID_conteudo], references: [ID_conteudo], onDelete: Cascade)
}

model tentativa {
  ID_tentativa   Int       @id @default(autoincrement())
  ID_usuario     Int
  ID_conteudo    Int
  pontuacao      Int
  data_tentativa DateTime  @default(now())

  usuario  usuario  @relation(fields: [ID_usuario], references: [ID_usuario], onDelete: Cascade)
  conteudo conteudo @relation(fields: [ID_conteudo], references: [ID_conteudo], onDelete: Cascade)
}

model feedback {
  ID_feedback    Int       @id @default(autoincrement())
  ID_usuario     Int
  ID_conteudo    Int
  comentario     String?
  avaliacao      Int       @db.TinyInt
  data_feedback  DateTime  @default(now())

  usuario  usuario  @relation(fields: [ID_usuario], references: [ID_usuario], onDelete: Cascade)
  conteudo conteudo @relation(fields: [ID_conteudo], references: [ID_conteudo], onDelete: Cascade)
}

enum TipoUsuario {
  Aluno
  Professor
}

enum TipoConteudo {
  Texto
  Vídeo
  Exercício
}
