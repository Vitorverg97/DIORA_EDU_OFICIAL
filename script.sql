CREATE DATABASE dioraedu;
USE dioraedu;

CREATE TABLE USUARIO (
	ID_usuario INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    senha VARCHAR(255) NOT NULL,
    tipo ENUM('Aluno', 'Professor') NOT NULL
);

CREATE TABLE CURSO (
ID_curso INT AUTO_INCREMENT PRIMARY KEY,
nome VARCHAR(100) NOT NULL,
descricao TEXT NOT NULL
);

CREATE TABLE MATRICULA (
    ID_usuario INT,
    ID_curso INT,
    data_matricula DATE NOT NULL,
    PRIMARY KEY (ID_usuario, ID_curso),
    FOREIGN KEY (ID_usuario) REFERENCES USUARIO(ID_usuario) ON DELETE CASCADE,
    FOREIGN KEY (ID_curso) REFERENCES CURSO(ID_curso) ON DELETE CASCADE
);

CREATE TABLE CONTEUDO (
    ID_conteudo INT AUTO_INCREMENT PRIMARY KEY,
    ID_curso INT NOT NULL,
    titulo VARCHAR(100) NOT NULL,
    descricao TEXT NOT NULL,
    tipo ENUM('Texto', 'Vídeo', 'Exercício') NOT NULL,
    FOREIGN KEY (ID_curso) REFERENCES CURSO(ID_curso) ON DELETE CASCADE
);

CREATE TABLE ATIVIDADE (
    ID_atividade INT AUTO_INCREMENT PRIMARY KEY,
    ID_conteudo INT NOT NULL,
    titulo VARCHAR(100) NOT NULL,
    descricao TEXT NOT NULL,
    data_criacao DATE NOT NULL,
    FOREIGN KEY (ID_conteudo) REFERENCES CONTEUDO(ID_conteudo) ON DELETE CASCADE
);

CREATE TABLE TENTATIVA (
    ID_tentativa INT AUTO_INCREMENT PRIMARY KEY,
    ID_usuario INT NOT NULL,
    ID_conteudo INT NOT NULL,
    pontuacao INT NOT NULL,
    data_tentativa DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_usuario) REFERENCES USUARIO(ID_usuario) ON DELETE CASCADE,
    FOREIGN KEY (ID_conteudo) REFERENCES CONTEUDO(ID_conteudo) ON DELETE CASCADE
);

CREATE TABLE FEEDBACK (
    ID_feedback INT AUTO_INCREMENT PRIMARY KEY,
    ID_usuario INT NOT NULL,
    ID_conteudo INT NOT NULL,
    comentario TEXT,
    avaliacao INT CHECK(avaliacao BETWEEN 1 AND 5),
    data_feedback DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (ID_usuario) REFERENCES USUARIO(ID_usuario) ON DELETE CASCADE,
    FOREIGN KEY (ID_conteudo) REFERENCES CONTEUDO(ID_conteudo) ON DELETE CASCADE
);

